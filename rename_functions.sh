#!/bin/bash
# Comprehensive function renaming script for minishell

# Define the workspace directory
WORKSPACE="/workspaces/min/minishell_v1"

# Function to perform search and replace in all C files
replace_in_files() {
    local old_name="$1"
    local new_name="$2"
    
    # Find all .c and .h files and replace
    find "$WORKSPACE" -type f \( -name "*.c" -o -name "*.h" \) -exec sed -i "s/\b${old_name}\b/${new_name}/g" {} +
}

echo "Starting comprehensive function renaming..."

# Main shell functions
replace_in_files "check_subexprs" "validate_subexpressions"
replace_in_files "ft_close" "close_descriptor"
replace_in_files "copy_str_arr" "duplicate_string_array"
replace_in_files "free_steps" "release_execution_steps"
replace_in_files "sigint_interactive" "handle_interrupt_interactive"
replace_in_files "sigint_command" "handle_interrupt_command"
replace_in_files "sigquit_command" "handle_quit_command"
replace_in_files "hd_sig_handler" "handle_heredoc_signal"
replace_in_files "get_env" "retrieve_environment_variable"
replace_in_files "retokenize_env_var" "reprocess_environment_token"
replace_in_files "minishell_readline" "read_command_line"
replace_in_files "minishell_run_heredocs" "process_heredoc_inputs"
replace_in_files "minishell_exec_and_cleanup" "execute_and_cleanup_shell"

# Signal functions
replace_in_files "handle_eof" "process_end_of_file"
replace_in_files "handle_ctrl_c" "reset_after_interrupt"
replace_in_files "handle_heredoc_ctrl_c" "process_heredoc_interrupt"

# Builtin functions
replace_in_files "run_builtin" "execute_builtin_command"
replace_in_files "ft_strcmp" "compare_strings"
replace_in_files "is_builtin" "check_builtin_command"
replace_in_files "parent_builtin" "requires_parent_execution"
replace_in_files "ft_echo" "display_echo_output"
replace_in_files "ft_pwd" "print_working_directory"
replace_in_files "ft_env" "show_environment_variables"
replace_in_files "ft_exit" "terminate_shell"
replace_in_files "ft_cd" "change_directory"
replace_in_files "find_and_update_oldpwd" "refresh_old_working_directory"
replace_in_files "find_and_update_pwd" "refresh_current_working_directory"
replace_in_files "move_to_home" "navigate_to_home"
replace_in_files "ft_export" "export_environment_variable"
replace_in_files "env_len" "calculate_environment_length"
replace_in_files "update_env" "modify_environment_variable"
replace_in_files "update_declared_env" "modify_declared_variable"
replace_in_files "check_export_arg" "validate_export_argument"
replace_in_files "export_error" "display_export_error"
replace_in_files "resize_str_arr" "resize_string_array"
replace_in_files "assign_val_to_env" "set_variable_value"
replace_in_files "print_the_export_env" "display_export_variables"
replace_in_files "run_export_with_args" "process_export_arguments"
replace_in_files "ft_unset" "remove_environment_variable"
replace_in_files "unset_var" "delete_variable"
replace_in_files "remove_env_var" "erase_environment_entry"
replace_in_files "unset_declared_var" "delete_declared_variable"
replace_in_files "remove_declared_env_var" "erase_declared_entry"

# Exec functions
replace_in_files "exec_subexpr" "execute_subexpression"
replace_in_files "set_cmd_path" "configure_command_path"
replace_in_files "reset_to_step" "rewind_to_step"
replace_in_files "init_exec_cmds" "initialize_command_execution"
replace_in_files "go_to_step" "navigate_to_step"
replace_in_files "exec_cmds" "execute_commands"
replace_in_files "first_cmd" "execute_initial_command"
replace_in_files "mid_cmd" "execute_pipeline_command"
replace_in_files "cmd_init" "initialize_command_execution_context"
replace_in_files "cmd_cleanup" "cleanup_command_resources"
replace_in_files "run_child_builtin" "execute_builtin_in_child"
replace_in_files "pipe_fds" "setup_pipe_descriptors"
replace_in_files "run_here_docs" "execute_heredoc_inputs"
replace_in_files "count_heredocs" "calculate_heredoc_count"
replace_in_files "skip_sub_heredocs" "bypass_subexpression_heredocs"
replace_in_files "handle_and_or" "process_logical_operators"
replace_in_files "get_exit" "retrieve_exit_status"
replace_in_files "wait_and_get_exit" "await_completion_and_get_status"
replace_in_files "check_command" "validate_command_execution"
replace_in_files "cmd_not_found" "report_command_not_found"
replace_in_files "cmd_is_dir" "report_command_is_directory"
replace_in_files "file_not_found" "report_file_not_found"
replace_in_files "permission_denied" "report_permission_denied"
replace_in_files "check_invalid_path" "verify_path_validity"
replace_in_files "check_invalid_command" "verify_command_validity"
replace_in_files "cmd_not_found_check" "detect_missing_command"
replace_in_files "file_not_found_check" "detect_missing_file"
replace_in_files "permission_denied_check" "detect_permission_issue"
replace_in_files "last_inredir" "retrieve_last_input_redirect"
replace_in_files "open_redirs" "configure_redirections"
replace_in_files "is_dir" "check_directory_status"
replace_in_files "get_full_path" "resolve_command_path"
replace_in_files "check_access_for_redir" "verify_redirection_access"
replace_in_files "check_valid_redir" "validate_redirection_files"
replace_in_files "check_redir_file_exist" "confirm_redirection_file_exists"

# Parsing functions
replace_in_files "parse_tokens" "analyze_token_stream"
replace_in_files "free_exec_step" "release_execution_step"
replace_in_files "free_redir" "release_redirection"
replace_in_files "print_exec_step" "display_execution_step"
replace_in_files "list_to_str_arr" "convert_list_to_array"
replace_in_files "is_terminator" "check_token_terminator"
replace_in_files "is_redirection" "check_token_redirection"
replace_in_files "check_for_errors" "detect_parsing_errors"
replace_in_files "parsing_error" "report_parsing_error"
replace_in_files "check_next_subexpr_token" "validate_subexpression_token"
replace_in_files "check_next_token" "validate_following_token"
replace_in_files "parse_step" "process_parsing_step"

# Tokenization functions
replace_in_files "eat_dollars" "strip_dollar_signs"
replace_in_files "tokenize_line" "process_input_line"
replace_in_files "tokenize_env_var_str" "process_environment_string"
replace_in_files "tokenize_env_variable" "extract_environment_variable"
replace_in_files "print_tokens_detailed" "display_token_details"
replace_in_files "strjoin_free" "join_and_free_strings"
replace_in_files "substr_free" "extract_and_free_substring"
replace_in_files "contains_env_var" "check_environment_variable"
replace_in_files "expand_env_var" "resolve_environment_variable"
replace_in_files "ft_free" "deallocate_memory"
replace_in_files "tokenize_operator" "create_operator_token"
replace_in_files "tokenize_subexpr" "create_subexpression_token"
replace_in_files "expand_wildcard" "apply_wildcard_expansion"
replace_in_files "split_wildcard" "parse_wildcard_pattern"
replace_in_files "free_token" "release_token_memory"
replace_in_files "free_split_array" "release_string_array"
replace_in_files "tokenize_single_quote" "create_single_quote_token"
replace_in_files "tokenize_double_quote" "create_double_quote_token"
replace_in_files "print_tokens" "display_token_list"
replace_in_files "eat_quotes" "remove_quote_characters"
replace_in_files "tokenize_normal" "create_normal_token"
replace_in_files "set_in_quotes" "track_quote_state"
replace_in_files "match_str_on_wildcard" "compare_string_with_wildcard"
replace_in_files "is_operator" "detect_operator_character"
replace_in_files "tokenize_operator_token" "process_operator_token"
replace_in_files "token_error" "handle_token_error"
replace_in_files "last_token_was_heredoc" "check_previous_heredoc"
replace_in_files "tokenize_wildcard" "process_wildcard_token"
replace_in_files "set_quotes" "update_quote_state"
replace_in_files "check_for_token_errors" "detect_token_syntax_errors"
replace_in_files "tokenize_env_cleanup" "cleanup_environment_tokenization"
replace_in_files "first_token_group" "process_primary_tokens"
replace_in_files "second_token_group" "process_secondary_tokens"
replace_in_files "tokenize_normal_and_wildcard" "process_text_and_wildcard"
replace_in_files "handle_quotes_count" "count_quoted_words"
replace_in_files "handle_quotes_split" "split_quoted_wildcard"
replace_in_files "create_word" "build_word_string"
replace_in_files "create_wc" "build_wildcard_segment"

echo "Function renaming complete!"
echo "Total replacements performed across all files."
